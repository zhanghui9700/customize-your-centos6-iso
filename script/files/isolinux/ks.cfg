# Kickstart file automatically generated by anaconda.

#version=DEVEL
# Install OS instead of upgrade 
install

# Use text mode install
text

# Local installation Use CDROM installation media  
cdrom 
# Network installation via FTP of HTTP 
#url --url ftpï¼š//<username>:<password>@install.example.com/pub/RH 
#url --url http://install.example.com/pub/RH 
# Network installation via NFS 
#nfs --server=nfsserver.example.com  --dir=/pub/install-tree 
# Local installation Use HD source 
#harddrive --partition /dev/sda2 --dir=/data/iso 
# If you use harddrive, you must use ISO images, not a tree 
# Note that even if though we clearpart --all, the install 
# partition will remain, which can be quite useful


# Language use at install
lang en_US.UTF-8

# keyboard type
keyboard us

# Network config
network --device eth0 --bootproto static --ip 172.16.200.1 --netmask 255.255.255.0 --gateway 172.16.200.1  --noipv6

# Auth type
authconfig --enableshadow --passalgo=sha512

# Root password
rootpw  eayun

# Firewall configuration
firewall --disabled

# Disable selinux
selinux --disabled

# OS timezone
timezone --utc Asia/Shanghai

# Include pre script
%include /tmp/pre-disk

# Identification the first disk of system, and init it
%pre --interpreter /usr/bin/python --log=/tmp/ks-pre.log --erroronfail
import os
disk=os.popen('ls /dev | grep da').read().split('\n')[0]
os.system("/usr/sbin/parted -s /dev/%s mklabel gpt" % disk)
with open('/tmp/pre-disk', 'w') as f:
    f.write('bootloader --driveorder=%s --append="crashkernel=auto rhgb quiet"\n' % disk)
%end

# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work

# Disk paration
part /boot --fstype=ext4 --size=500

## ram < swap < 2*ram
part swap --recommended


## Allocation all space of left to LVM name pv.01
part pv.01 --grow --size=1

volgroup vg pv.01

## Allocation / to 35G~100G
logvol / --fstype=ext4 --name=lv_root --vgname=vg  --size=35840 --grow --maxsize=102400

## Allocation all space left of LVM to /data
logvol /data --fstype=ext4 --name=lv_data --vgname=vg  --grow --size=1024

# Install Packages
%packages
@core
@server-policy
@workstation-policy
vim
dialog
eayun-mirrors
nginx
createrepo
openstack-packstack
%end

# Init OS
## copy rpm
%post --nochroot --log=/mnt/sysimage/root/ks-post.log
mkdir -p /mnt/sysimage/data/eayun
cp -r /mnt/source/Packages  /mnt/sysimage/data/eayun
cp /tmp/ks-pre.log /mnt/sysimage/root/

cp  /mnt/source/uitils/bin/*  /mnt/sysimage/usr/local/sbin/

%end


%post --log=/mnt/sysimage/root/ks-post.log

echo '127.0.0.1 manager.com' >> /etc/hosts
echo "nameserver 127.0.0.1" >> /etc/resolv.conf
echo "nameserver 114.114.114.114" >> /etc/resolv.conf

rm -rf /etc/nginx/conf.d/*.conf
cat > /etc/nginx/conf.d/eayun.conf  << EOF
# Eayun cloud mirrors

server {
    listen       8000;
    autoindex       on;

    location /mirrors/ {
        alias /data/eayun/Packages/;
    }
}
EOF

createrepo /data/eayun/Packages
ls /etc/yum.repos.d/CentOS-*.repo | xargs -n 1 -i mv "{}" "{}_back";
yum clean all

cat >> /etc/rc.local << EOF
/etc/init.d/nginx restart
EOF

mkdir /root/.ssh
ssh-keygen -t rsa -N "" -f /root/.ssh/id_rsa
cp /root/.ssh/id_rsa.pub  /root/.ssh/authorized_keys

packstack --gen-answer-file=/root/answers.cfg
sed -i 's/CONFIG_SSH_KEY=/CONFIG_SSH_KEY=\/root\/\.ssh\/id_rsa\.pub/' -i /root/answers.cfg
sed -i 's/CONFIG_USE_EPEL=y/CONFIG_USE_EPEL=n/' -i /root/answers.cfg
sed -i 's/CONFIG_NAGIOS_INSTALL=y/CONFIG_NAGIOS_INSTALL=n/' -i /root/answers.cfg

chmod +x /usr/local/sbin/ec_*

%end

# Eject CD, reboot
reboot --eject
